# Generated by Django 4.1.7 on 2023-03-14 15:50

import ckeditor.fields
import ckeditor_uploader.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AboutUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('all_information', ckeditor.fields.RichTextField()),
            ],
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('image', models.ImageField(upload_to='bannerImg')),
                ('http_url_link', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('image', models.ImageField(upload_to='brandImg')),
                ('slug', models.SlugField(blank=True, max_length=100, null=True, unique=True)),
                ('show_status', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campaign_name', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name': 'Campaign',
                'verbose_name_plural': 'Campaign Category',
            },
        ),
        migrations.CreateModel(
            name='ConductData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.IntegerField()),
                ('subject', models.CharField(max_length=150)),
                ('message', models.TextField()),
                ('view_status', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'ConductData',
                'verbose_name_plural': 'ConductData',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=15)),
                ('amount', models.FloatField()),
                ('valid_from', models.DateTimeField(default=django.utils.timezone.now)),
                ('valid_to', models.DateTimeField(default=django.utils.timezone.now)),
                ('max_value', models.IntegerField(null=True, validators=[django.core.validators.MaxValueValidator(100)], verbose_name='Coupon Quantity')),
                ('used', models.IntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FlashSale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('FlashSaleOn_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('FlashSale_expire_date', models.DateTimeField()),
            ],
            options={
                'verbose_name': 'FlashSale',
                'verbose_name_plural': 'FlashSales',
            },
        ),
        migrations.CreateModel(
            name='ImageGallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('image', models.FileField(upload_to='gallery')),
            ],
        ),
        migrations.CreateModel(
            name='Mission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('all_information', ckeditor.fields.RichTextField()),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordered_date', models.DateTimeField()),
                ('order_complate_date', models.DateTimeField(blank=True, null=True)),
                ('order_status', models.CharField(choices=[('pending', 'pending'), ('processing', 'processing'), ('on the way', 'on the way'), ('complete', 'complete'), ('cancel', 'cancel')], default='pending', max_length=150)),
                ('total_order_amount', models.CharField(blank=True, max_length=150, null=True)),
                ('paid_amount', models.CharField(default=0, max_length=150)),
                ('due_amount', models.CharField(default=0, max_length=150)),
                ('ordered', models.BooleanField(default=False)),
                ('orderId', models.CharField(blank=True, max_length=150, null=True)),
                ('paymentId', models.CharField(blank=True, max_length=150, null=True)),
                ('payment_option', models.CharField(max_length=150)),
                ('order_read_status', models.BooleanField(default=False)),
                ('redx_percel_traking_number', models.CharField(blank=True, max_length=150, null=True)),
                ('others_transport_trakink_url', models.URLField(blank=True, null=True)),
                ('coupon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.coupon')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='PriceRange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_range', models.CharField(max_length=100, unique=True)),
                ('ordering', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Price Range',
                'verbose_name_plural': 'Price Range',
                'ordering': ['ordering'],
            },
        ),
        migrations.CreateModel(
            name='PrivacyPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('all_information', ckeditor.fields.RichTextField()),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=100)),
                ('product_code', models.CharField(max_length=150)),
                ('slug', models.SlugField(blank=True, max_length=100, null=True, unique=True)),
                ('image', models.ImageField(default='ProductImg/noimg.jpg', upload_to='productImg')),
                ('hover_image', models.ImageField(blank=True, default='noimg.jpg', null=True, upload_to='ProductImg')),
                ('regular_price', models.IntegerField()),
                ('discount_price', models.IntegerField(blank=True, null=True)),
                ('product_purchase_price', models.IntegerField()),
                ('sort_discription', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('details', ckeditor_uploader.fields.RichTextUploadingField()),
                ('shipping_and_return', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('size_chart', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('stock_quantity', models.PositiveIntegerField()),
                ('show_status', models.BooleanField(default=False)),
                ('product_label', models.CharField(blank=True, max_length=255, null=True)),
                ('meta_title', models.CharField(blank=True, max_length=100, null=True)),
                ('availability', models.CharField(blank=True, max_length=120, null=True)),
                ('rating', models.CharField(blank=True, max_length=120, null=True)),
                ('tax', models.CharField(blank=True, max_length=120, null=True)),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.brand')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Returns_Policy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('all_information', ckeditor.fields.RichTextField()),
            ],
        ),
        migrations.CreateModel(
            name='ShippingAndDelivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('all_information', ckeditor.fields.RichTextField()),
            ],
        ),
        migrations.CreateModel(
            name='SiteLogo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('image', models.ImageField(upload_to='siteLogo')),
            ],
        ),
        migrations.CreateModel(
            name='TermsAndConditions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('all_information', ckeditor.fields.RichTextField()),
            ],
        ),
        migrations.CreateModel(
            name='VideoGallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('video_embed_link', models.URLField(max_length=500)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Vision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('all_information', ckeditor.fields.RichTextField()),
            ],
        ),
        migrations.CreateModel(
            name='WhishLIst',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('wish_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.product')),
            ],
        ),
        migrations.CreateModel(
            name='Variation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('size', 'size'), ('color', 'color')], max_length=120)),
                ('title', models.CharField(max_length=120)),
                ('active', models.BooleanField(default=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('rating', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], default=5)),
                ('review', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='ReviewImg')),
                ('approve_status', models.BooleanField(default=False)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductPercel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(blank=True, max_length=150, null=True)),
                ('customer_phone', models.CharField(blank=True, max_length=150, null=True)),
                ('customer_address', models.CharField(blank=True, max_length=150, null=True)),
                ('merchant_invoice_id', models.CharField(blank=True, max_length=150, null=True)),
                ('cash_collection_amount', models.CharField(max_length=150)),
                ('delivery_area', models.CharField(max_length=150)),
                ('delivery_area_id', models.CharField(max_length=150)),
                ('parcel_weight', models.CharField(max_length=150)),
                ('tracking_id', models.CharField(max_length=150)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.order')),
            ],
        ),
        migrations.CreateModel(
            name='ProductImgGallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(upload_to='ProductImgGallery')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(blank=True, max_length=100, null=True)),
                ('show_status', models.BooleanField(default=False)),
                ('img', models.ImageField(blank=True, null=True, upload_to='CategoryImg')),
                ('slug', models.SlugField(blank=True, max_length=100, null=True, unique=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='store.productcategory')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='categoris',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.productcategory', verbose_name='Product Category'),
        ),
        migrations.AddField(
            model_name='product',
            name='price_range',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.pricerange'),
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordered', models.BooleanField(default=False)),
                ('quantity', models.IntegerField(default=1)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('variation', models.ManyToManyField(to='store.variation')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.AddField(
            model_name='order',
            name='items',
            field=models.ManyToManyField(to='store.orderitem'),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='DealOfTheDayProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.product')),
            ],
            options={
                'verbose_name': 'Deal Of The Day',
                'verbose_name_plural': 'Deal Of The Day',
            },
        ),
        migrations.CreateModel(
            name='CampaignProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campaign_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.campaign')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.product')),
            ],
            options={
                'verbose_name': 'CampaignProduct',
                'verbose_name_plural': 'CampaignProduct',
            },
        ),
    ]
